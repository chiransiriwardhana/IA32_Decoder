
a.out:     file format elf32-i386


Disassembly of section .interp:

000001b4 <.interp>:
 1b4:	2f                   	das    
 1b5:	6c                   	insb   (%dx),%es:(%edi)
 1b6:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 1bd:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 1c4:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.gnu.build-id:

000001c8 <.note.gnu.build-id>:
 1c8:	04 00                	add    $0x0,%al
 1ca:	00 00                	add    %al,(%eax)
 1cc:	14 00                	adc    $0x0,%al
 1ce:	00 00                	add    %al,(%eax)
 1d0:	03 00                	add    (%eax),%eax
 1d2:	00 00                	add    %al,(%eax)
 1d4:	47                   	inc    %edi
 1d5:	4e                   	dec    %esi
 1d6:	55                   	push   %ebp
 1d7:	00 cc                	add    %cl,%ah
 1d9:	17                   	pop    %ss
 1da:	a8 6b                	test   $0x6b,%al
 1dc:	f3 8a a2 28 fc 35 6c 	repz mov 0x6c35fc28(%edx),%ah
 1e3:	4c                   	dec    %esp
 1e4:	39 f7                	cmp    %esi,%edi
 1e6:	d4 ba                	aam    $0xba
 1e8:	ee                   	out    %al,(%dx)
 1e9:	92                   	xchg   %eax,%edx
 1ea:	b9                   	.byte 0xb9
 1eb:	5f                   	pop    %edi

Disassembly of section .note.gnu.property:

000001ec <.note.gnu.property>:
 1ec:	04 00                	add    $0x0,%al
 1ee:	00 00                	add    %al,(%eax)
 1f0:	0c 00                	or     $0x0,%al
 1f2:	00 00                	add    %al,(%eax)
 1f4:	05 00 00 00 47       	add    $0x47000000,%eax
 1f9:	4e                   	dec    %esi
 1fa:	55                   	push   %ebp
 1fb:	00 02                	add    %al,(%edx)
 1fd:	00 00                	add    %al,(%eax)
 1ff:	c0 04 00 00          	rolb   $0x0,(%eax,%eax,1)
 203:	00 03                	add    %al,(%ebx)
 205:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.ABI-tag:

00000208 <.note.ABI-tag>:
 208:	04 00                	add    $0x0,%al
 20a:	00 00                	add    %al,(%eax)
 20c:	10 00                	adc    %al,(%eax)
 20e:	00 00                	add    %al,(%eax)
 210:	01 00                	add    %eax,(%eax)
 212:	00 00                	add    %al,(%eax)
 214:	47                   	inc    %edi
 215:	4e                   	dec    %esi
 216:	55                   	push   %ebp
 217:	00 00                	add    %al,(%eax)
 219:	00 00                	add    %al,(%eax)
 21b:	00 03                	add    %al,(%ebx)
 21d:	00 00                	add    %al,(%eax)
 21f:	00 02                	add    %al,(%edx)
 221:	00 00                	add    %al,(%eax)
 223:	00 00                	add    %al,(%eax)
 225:	00 00                	add    %al,(%eax)
	...

Disassembly of section .gnu.hash:

00000228 <.gnu.hash>:
 228:	02 00                	add    (%eax),%al
 22a:	00 00                	add    %al,(%eax)
 22c:	07                   	pop    %es
 22d:	00 00                	add    %al,(%eax)
 22f:	00 01                	add    %al,(%ecx)
 231:	00 00                	add    %al,(%eax)
 233:	00 05 00 00 00 00    	add    %al,0x0
 239:	20 00                	and    %al,(%eax)
 23b:	20 00                	and    %al,(%eax)
 23d:	00 00                	add    %al,(%eax)
 23f:	00 07                	add    %al,(%edi)
 241:	00 00                	add    %al,(%eax)
 243:	00                   	.byte 0x0
 244:	ad                   	lods   %ds:(%esi),%eax
 245:	4b                   	dec    %ebx
 246:	e3 c0                	jecxz  208 <_init-0xdf8>

Disassembly of section .dynsym:

00000248 <.dynsym>:
	...
 258:	6a 00                	push   $0x0
	...
 262:	00 00                	add    %al,(%eax)
 264:	20 00                	and    %al,(%eax)
 266:	00 00                	add    %al,(%eax)
 268:	27                   	daa    
	...
 271:	00 00                	add    %al,(%eax)
 273:	00 22                	add    %ah,(%edx)
 275:	00 00                	add    %al,(%eax)
 277:	00 86 00 00 00 00    	add    %al,0x0(%esi)
 27d:	00 00                	add    %al,(%eax)
 27f:	00 00                	add    %al,(%eax)
 281:	00 00                	add    %al,(%eax)
 283:	00 20                	add    %ah,(%eax)
 285:	00 00                	add    %al,(%eax)
 287:	00 36                	add    %dh,(%esi)
	...
 291:	00 00                	add    %al,(%eax)
 293:	00 12                	add    %dl,(%edx)
 295:	00 00                	add    %al,(%eax)
 297:	00 1a                	add    %bl,(%edx)
	...
 2a1:	00 00                	add    %al,(%eax)
 2a3:	00 12                	add    %dl,(%edx)
 2a5:	00 00                	add    %al,(%eax)
 2a7:	00 95 00 00 00 00    	add    %dl,0x0(%ebp)
 2ad:	00 00                	add    %al,(%eax)
 2af:	00 00                	add    %al,(%eax)
 2b1:	00 00                	add    %al,(%eax)
 2b3:	00 20                	add    %ah,(%eax)
 2b5:	00 00                	add    %al,(%eax)
 2b7:	00 0b                	add    %cl,(%ebx)
 2b9:	00 00                	add    %al,(%eax)
 2bb:	00 04 20             	add    %al,(%eax,%eiz,1)
 2be:	00 00                	add    %al,(%eax)
 2c0:	04 00                	add    $0x0,%al
 2c2:	00 00                	add    %al,(%eax)
 2c4:	11 00                	adc    %eax,(%eax)
 2c6:	12 00                	adc    (%eax),%al

Disassembly of section .dynstr:

000002c8 <.dynstr>:
 2c8:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 2cc:	63 2e                	arpl   %bp,(%esi)
 2ce:	73 6f                	jae    33f <_init-0xcc1>
 2d0:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 2d5:	4f                   	dec    %edi
 2d6:	5f                   	pop    %edi
 2d7:	73 74                	jae    34d <_init-0xcb3>
 2d9:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 2e0:	64 
 2e1:	00 5f 5f             	add    %bl,0x5f(%edi)
 2e4:	70 72                	jo     358 <_init-0xca8>
 2e6:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%esi),%ebp
 2ed:	6b 00 5f             	imul   $0x5f,(%eax),%eax
 2f0:	5f                   	pop    %edi
 2f1:	63 78 61             	arpl   %di,0x61(%eax)
 2f4:	5f                   	pop    %edi
 2f5:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 2fb:	7a 65                	jp     362 <_init-0xc9e>
 2fd:	00 5f 5f             	add    %bl,0x5f(%edi)
 300:	6c                   	insb   (%dx),%es:(%edi)
 301:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 308:	72 74                	jb     37e <_init-0xc82>
 30a:	5f                   	pop    %edi
 30b:	6d                   	insl   (%dx),%es:(%edi)
 30c:	61                   	popa   
 30d:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 314:	43                   	inc    %ebx
 315:	5f                   	pop    %edi
 316:	32 2e                	xor    (%esi),%ch
 318:	33 2e                	xor    (%esi),%ebp
 31a:	34 00                	xor    $0x0,%al
 31c:	47                   	inc    %edi
 31d:	4c                   	dec    %esp
 31e:	49                   	dec    %ecx
 31f:	42                   	inc    %edx
 320:	43                   	inc    %ebx
 321:	5f                   	pop    %edi
 322:	32 2e                	xor    (%esi),%ch
 324:	30 00                	xor    %al,(%eax)
 326:	47                   	inc    %edi
 327:	4c                   	dec    %esp
 328:	49                   	dec    %ecx
 329:	42                   	inc    %edx
 32a:	43                   	inc    %ebx
 32b:	5f                   	pop    %edi
 32c:	32 2e                	xor    (%esi),%ch
 32e:	31 2e                	xor    %ebp,(%esi)
 330:	33 00                	xor    (%eax),%eax
 332:	5f                   	pop    %edi
 333:	49                   	dec    %ecx
 334:	54                   	push   %esp
 335:	4d                   	dec    %ebp
 336:	5f                   	pop    %edi
 337:	64 65 72 65          	fs gs jb 3a0 <_init-0xc60>
 33b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 342:	4d 
 343:	43                   	inc    %ebx
 344:	6c                   	insb   (%dx),%es:(%edi)
 345:	6f                   	outsl  %ds:(%esi),(%dx)
 346:	6e                   	outsb  %ds:(%esi),(%dx)
 347:	65 54                	gs push %esp
 349:	61                   	popa   
 34a:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)
 34e:	5f                   	pop    %edi
 34f:	5f                   	pop    %edi
 350:	67 6d                	insl   (%dx),%es:(%di)
 352:	6f                   	outsl  %ds:(%esi),(%dx)
 353:	6e                   	outsb  %ds:(%esi),(%dx)
 354:	5f                   	pop    %edi
 355:	73 74                	jae    3cb <_init-0xc35>
 357:	61                   	popa   
 358:	72 74                	jb     3ce <_init-0xc32>
 35a:	5f                   	pop    %edi
 35b:	5f                   	pop    %edi
 35c:	00 5f 49             	add    %bl,0x49(%edi)
 35f:	54                   	push   %esp
 360:	4d                   	dec    %ebp
 361:	5f                   	pop    %edi
 362:	72 65                	jb     3c9 <_init-0xc37>
 364:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%bp,%di),%esi
 36b:	4d 
 36c:	43                   	inc    %ebx
 36d:	6c                   	insb   (%dx),%es:(%edi)
 36e:	6f                   	outsl  %ds:(%esi),(%dx)
 36f:	6e                   	outsb  %ds:(%esi),(%dx)
 370:	65 54                	gs push %esp
 372:	61                   	popa   
 373:	62 6c 65 00          	bound  %ebp,0x0(%ebp,%eiz,2)

Disassembly of section .gnu.version:

00000378 <.gnu.version>:
 378:	00 00                	add    %al,(%eax)
 37a:	00 00                	add    %al,(%eax)
 37c:	02 00                	add    (%eax),%al
 37e:	00 00                	add    %al,(%eax)
 380:	03 00                	add    (%eax),%eax
 382:	04 00                	add    $0x0,%al
 384:	00 00                	add    %al,(%eax)
 386:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

00000388 <.gnu.version_r>:
 388:	01 00                	add    %eax,(%eax)
 38a:	03 00                	add    (%eax),%eax
 38c:	01 00                	add    %eax,(%eax)
 38e:	00 00                	add    %al,(%eax)
 390:	10 00                	adc    %al,(%eax)
 392:	00 00                	add    %al,(%eax)
 394:	00 00                	add    %al,(%eax)
 396:	00 00                	add    %al,(%eax)
 398:	74 19                	je     3b3 <_init-0xc4d>
 39a:	69 09 00 00 04 00    	imul   $0x40000,(%ecx),%ecx
 3a0:	48                   	dec    %eax
 3a1:	00 00                	add    %al,(%eax)
 3a3:	00 10                	add    %dl,(%eax)
 3a5:	00 00                	add    %al,(%eax)
 3a7:	00 10                	add    %dl,(%eax)
 3a9:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%ecx),%ebp
 3b0:	54                   	push   %esp
 3b1:	00 00                	add    %al,(%eax)
 3b3:	00 10                	add    %dl,(%eax)
 3b5:	00 00                	add    %al,(%eax)
 3b7:	00 73 1f             	add    %dh,0x1f(%ebx)
 3ba:	69 09 00 00 02 00    	imul   $0x20000,(%ecx),%ecx
 3c0:	5e                   	pop    %esi
 3c1:	00 00                	add    %al,(%eax)
 3c3:	00 00                	add    %al,(%eax)
 3c5:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

000003c8 <.rel.dyn>:
 3c8:	d8 3e                	fdivrs (%esi)
 3ca:	00 00                	add    %al,(%eax)
 3cc:	08 00                	or     %al,(%eax)
 3ce:	00 00                	add    %al,(%eax)
 3d0:	dc 3e                	fdivrl (%esi)
 3d2:	00 00                	add    %al,(%eax)
 3d4:	08 00                	or     %al,(%eax)
 3d6:	00 00                	add    %al,(%eax)
 3d8:	f8                   	clc    
 3d9:	3f                   	aas    
 3da:	00 00                	add    %al,(%eax)
 3dc:	08 00                	or     %al,(%eax)
 3de:	00 00                	add    %al,(%eax)
 3e0:	04 40                	add    $0x40,%al
 3e2:	00 00                	add    %al,(%eax)
 3e4:	08 00                	or     %al,(%eax)
 3e6:	00 00                	add    %al,(%eax)
 3e8:	ec                   	in     (%dx),%al
 3e9:	3f                   	aas    
 3ea:	00 00                	add    %al,(%eax)
 3ec:	06                   	push   %es
 3ed:	01 00                	add    %eax,(%eax)
 3ef:	00 f0                	add    %dh,%al
 3f1:	3f                   	aas    
 3f2:	00 00                	add    %al,(%eax)
 3f4:	06                   	push   %es
 3f5:	02 00                	add    (%eax),%al
 3f7:	00 f4                	add    %dh,%ah
 3f9:	3f                   	aas    
 3fa:	00 00                	add    %al,(%eax)
 3fc:	06                   	push   %es
 3fd:	03 00                	add    (%eax),%eax
 3ff:	00 fc                	add    %bh,%ah
 401:	3f                   	aas    
 402:	00 00                	add    %al,(%eax)
 404:	06                   	push   %es
 405:	06                   	push   %es
	...

Disassembly of section .rel.plt:

00000408 <.rel.plt>:
 408:	e4 3f                	in     $0x3f,%al
 40a:	00 00                	add    %al,(%eax)
 40c:	07                   	pop    %es
 40d:	04 00                	add    $0x0,%al
 40f:	00 e8                	add    %ch,%al
 411:	3f                   	aas    
 412:	00 00                	add    %al,(%eax)
 414:	07                   	pop    %es
 415:	05                   	.byte 0x5
	...

Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 03 01 00 00       	call   1110 <__x86.get_pc_thunk.bx>
    100d:	81 c3 cb 2f 00 00    	add    $0x2fcb,%ebx
    1013:	8b 83 1c 00 00 00    	mov    0x1c(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	0f 1f 40 00          	nopl   0x0(%eax)
    1040:	f3 0f 1e fb          	endbr32 
    1044:	68 00 00 00 00       	push   $0x0
    1049:	e9 e2 ff ff ff       	jmp    1030 <.plt>
    104e:	66 90                	xchg   %ax,%ax
    1050:	f3 0f 1e fb          	endbr32 
    1054:	68 08 00 00 00       	push   $0x8
    1059:	e9 d2 ff ff ff       	jmp    1030 <.plt>
    105e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

00001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fb          	endbr32 
    1064:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    106a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .plt.sec:

00001070 <__libc_start_main@plt>:
    1070:	f3 0f 1e fb          	endbr32 
    1074:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    107a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

00001080 <__printf_chk@plt>:
    1080:	f3 0f 1e fb          	endbr32 
    1084:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    108a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .text:

00001090 <main>:
    1090:	f3 0f 1e fb          	endbr32 
    1094:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    1098:	83 e4 f0             	and    $0xfffffff0,%esp
    109b:	ff 71 fc             	pushl  -0x4(%ecx)
    109e:	55                   	push   %ebp
    109f:	89 e5                	mov    %esp,%ebp
    10a1:	53                   	push   %ebx
    10a2:	e8 69 00 00 00       	call   1110 <__x86.get_pc_thunk.bx>
    10a7:	81 c3 31 2f 00 00    	add    $0x2f31,%ebx
    10ad:	51                   	push   %ecx
    10ae:	83 ec 08             	sub    $0x8,%esp
    10b1:	8d 83 30 e0 ff ff    	lea    -0x1fd0(%ebx),%eax
    10b7:	50                   	push   %eax
    10b8:	6a 01                	push   $0x1
    10ba:	e8 c1 ff ff ff       	call   1080 <__printf_chk@plt>
    10bf:	83 c4 10             	add    $0x10,%esp
    10c2:	8d 65 f8             	lea    -0x8(%ebp),%esp
    10c5:	31 c0                	xor    %eax,%eax
    10c7:	59                   	pop    %ecx
    10c8:	5b                   	pop    %ebx
    10c9:	5d                   	pop    %ebp
    10ca:	8d 61 fc             	lea    -0x4(%ecx),%esp
    10cd:	c3                   	ret    
    10ce:	66 90                	xchg   %ax,%ax

000010d0 <_start>:
    10d0:	f3 0f 1e fb          	endbr32 
    10d4:	31 ed                	xor    %ebp,%ebp
    10d6:	5e                   	pop    %esi
    10d7:	89 e1                	mov    %esp,%ecx
    10d9:	83 e4 f0             	and    $0xfffffff0,%esp
    10dc:	50                   	push   %eax
    10dd:	54                   	push   %esp
    10de:	52                   	push   %edx
    10df:	e8 22 00 00 00       	call   1106 <_start+0x36>
    10e4:	81 c3 f4 2e 00 00    	add    $0x2ef4,%ebx
    10ea:	8d 83 a8 d2 ff ff    	lea    -0x2d58(%ebx),%eax
    10f0:	50                   	push   %eax
    10f1:	8d 83 38 d2 ff ff    	lea    -0x2dc8(%ebx),%eax
    10f7:	50                   	push   %eax
    10f8:	51                   	push   %ecx
    10f9:	56                   	push   %esi
    10fa:	ff b3 20 00 00 00    	pushl  0x20(%ebx)
    1100:	e8 6b ff ff ff       	call   1070 <__libc_start_main@plt>
    1105:	f4                   	hlt    
    1106:	8b 1c 24             	mov    (%esp),%ebx
    1109:	c3                   	ret    
    110a:	66 90                	xchg   %ax,%ax
    110c:	66 90                	xchg   %ax,%ax
    110e:	66 90                	xchg   %ax,%ax

00001110 <__x86.get_pc_thunk.bx>:
    1110:	8b 1c 24             	mov    (%esp),%ebx
    1113:	c3                   	ret    
    1114:	66 90                	xchg   %ax,%ax
    1116:	66 90                	xchg   %ax,%ax
    1118:	66 90                	xchg   %ax,%ax
    111a:	66 90                	xchg   %ax,%ax
    111c:	66 90                	xchg   %ax,%ax
    111e:	66 90                	xchg   %ax,%ax

00001120 <deregister_tm_clones>:
    1120:	e8 e4 00 00 00       	call   1209 <__x86.get_pc_thunk.dx>
    1125:	81 c2 b3 2e 00 00    	add    $0x2eb3,%edx
    112b:	8d 8a 30 00 00 00    	lea    0x30(%edx),%ecx
    1131:	8d 82 30 00 00 00    	lea    0x30(%edx),%eax
    1137:	39 c8                	cmp    %ecx,%eax
    1139:	74 1d                	je     1158 <deregister_tm_clones+0x38>
    113b:	8b 82 14 00 00 00    	mov    0x14(%edx),%eax
    1141:	85 c0                	test   %eax,%eax
    1143:	74 13                	je     1158 <deregister_tm_clones+0x38>
    1145:	55                   	push   %ebp
    1146:	89 e5                	mov    %esp,%ebp
    1148:	83 ec 14             	sub    $0x14,%esp
    114b:	51                   	push   %ecx
    114c:	ff d0                	call   *%eax
    114e:	83 c4 10             	add    $0x10,%esp
    1151:	c9                   	leave  
    1152:	c3                   	ret    
    1153:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1157:	90                   	nop
    1158:	c3                   	ret    
    1159:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001160 <register_tm_clones>:
    1160:	e8 a4 00 00 00       	call   1209 <__x86.get_pc_thunk.dx>
    1165:	81 c2 73 2e 00 00    	add    $0x2e73,%edx
    116b:	55                   	push   %ebp
    116c:	89 e5                	mov    %esp,%ebp
    116e:	53                   	push   %ebx
    116f:	8d 8a 30 00 00 00    	lea    0x30(%edx),%ecx
    1175:	8d 82 30 00 00 00    	lea    0x30(%edx),%eax
    117b:	83 ec 04             	sub    $0x4,%esp
    117e:	29 c8                	sub    %ecx,%eax
    1180:	89 c3                	mov    %eax,%ebx
    1182:	c1 e8 1f             	shr    $0x1f,%eax
    1185:	c1 fb 02             	sar    $0x2,%ebx
    1188:	01 d8                	add    %ebx,%eax
    118a:	d1 f8                	sar    %eax
    118c:	74 14                	je     11a2 <register_tm_clones+0x42>
    118e:	8b 92 24 00 00 00    	mov    0x24(%edx),%edx
    1194:	85 d2                	test   %edx,%edx
    1196:	74 0a                	je     11a2 <register_tm_clones+0x42>
    1198:	83 ec 08             	sub    $0x8,%esp
    119b:	50                   	push   %eax
    119c:	51                   	push   %ecx
    119d:	ff d2                	call   *%edx
    119f:	83 c4 10             	add    $0x10,%esp
    11a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11a5:	c9                   	leave  
    11a6:	c3                   	ret    
    11a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    11ae:	66 90                	xchg   %ax,%ax

000011b0 <__do_global_dtors_aux>:
    11b0:	f3 0f 1e fb          	endbr32 
    11b4:	55                   	push   %ebp
    11b5:	89 e5                	mov    %esp,%ebp
    11b7:	53                   	push   %ebx
    11b8:	e8 53 ff ff ff       	call   1110 <__x86.get_pc_thunk.bx>
    11bd:	81 c3 1b 2e 00 00    	add    $0x2e1b,%ebx
    11c3:	83 ec 04             	sub    $0x4,%esp
    11c6:	80 bb 30 00 00 00 00 	cmpb   $0x0,0x30(%ebx)
    11cd:	75 27                	jne    11f6 <__do_global_dtors_aux+0x46>
    11cf:	8b 83 18 00 00 00    	mov    0x18(%ebx),%eax
    11d5:	85 c0                	test   %eax,%eax
    11d7:	74 11                	je     11ea <__do_global_dtors_aux+0x3a>
    11d9:	83 ec 0c             	sub    $0xc,%esp
    11dc:	ff b3 2c 00 00 00    	pushl  0x2c(%ebx)
    11e2:	e8 79 fe ff ff       	call   1060 <__cxa_finalize@plt>
    11e7:	83 c4 10             	add    $0x10,%esp
    11ea:	e8 31 ff ff ff       	call   1120 <deregister_tm_clones>
    11ef:	c6 83 30 00 00 00 01 	movb   $0x1,0x30(%ebx)
    11f6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11f9:	c9                   	leave  
    11fa:	c3                   	ret    
    11fb:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    11ff:	90                   	nop

00001200 <frame_dummy>:
    1200:	f3 0f 1e fb          	endbr32 
    1204:	e9 57 ff ff ff       	jmp    1160 <register_tm_clones>

00001209 <__x86.get_pc_thunk.dx>:
    1209:	8b 14 24             	mov    (%esp),%edx
    120c:	c3                   	ret    
    120d:	66 90                	xchg   %ax,%ax
    120f:	90                   	nop

00001210 <__libc_csu_init>:
    1210:	f3 0f 1e fb          	endbr32 
    1214:	55                   	push   %ebp
    1215:	e8 6b 00 00 00       	call   1285 <__x86.get_pc_thunk.bp>
    121a:	81 c5 be 2d 00 00    	add    $0x2dbe,%ebp
    1220:	57                   	push   %edi
    1221:	56                   	push   %esi
    1222:	53                   	push   %ebx
    1223:	83 ec 0c             	sub    $0xc,%esp
    1226:	89 eb                	mov    %ebp,%ebx
    1228:	8b 7c 24 28          	mov    0x28(%esp),%edi
    122c:	e8 cf fd ff ff       	call   1000 <_init>
    1231:	8d 9d 04 ff ff ff    	lea    -0xfc(%ebp),%ebx
    1237:	8d 85 00 ff ff ff    	lea    -0x100(%ebp),%eax
    123d:	29 c3                	sub    %eax,%ebx
    123f:	c1 fb 02             	sar    $0x2,%ebx
    1242:	74 29                	je     126d <__libc_csu_init+0x5d>
    1244:	31 f6                	xor    %esi,%esi
    1246:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    124d:	8d 76 00             	lea    0x0(%esi),%esi
    1250:	83 ec 04             	sub    $0x4,%esp
    1253:	57                   	push   %edi
    1254:	ff 74 24 2c          	pushl  0x2c(%esp)
    1258:	ff 74 24 2c          	pushl  0x2c(%esp)
    125c:	ff 94 b5 00 ff ff ff 	call   *-0x100(%ebp,%esi,4)
    1263:	83 c6 01             	add    $0x1,%esi
    1266:	83 c4 10             	add    $0x10,%esp
    1269:	39 f3                	cmp    %esi,%ebx
    126b:	75 e3                	jne    1250 <__libc_csu_init+0x40>
    126d:	83 c4 0c             	add    $0xc,%esp
    1270:	5b                   	pop    %ebx
    1271:	5e                   	pop    %esi
    1272:	5f                   	pop    %edi
    1273:	5d                   	pop    %ebp
    1274:	c3                   	ret    
    1275:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    127c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001280 <__libc_csu_fini>:
    1280:	f3 0f 1e fb          	endbr32 
    1284:	c3                   	ret    

00001285 <__x86.get_pc_thunk.bp>:
    1285:	8b 2c 24             	mov    (%esp),%ebp
    1288:	c3                   	ret    

Disassembly of section .fini:

0000128c <_fini>:
    128c:	f3 0f 1e fb          	endbr32 
    1290:	53                   	push   %ebx
    1291:	83 ec 08             	sub    $0x8,%esp
    1294:	e8 77 fe ff ff       	call   1110 <__x86.get_pc_thunk.bx>
    1299:	81 c3 3f 2d 00 00    	add    $0x2d3f,%ebx
    129f:	83 c4 08             	add    $0x8,%esp
    12a2:	5b                   	pop    %ebx
    12a3:	c3                   	ret    

Disassembly of section .rodata:

00002000 <_fp_hw>:
    2000:	03 00                	add    (%eax),%eax
	...

00002004 <_IO_stdin_used>:
    2004:	01 00                	add    %eax,(%eax)
    2006:	02 00                	add    (%eax),%al
    2008:	54                   	push   %esp
    2009:	79 70                	jns    207b <__GNU_EH_FRAME_HDR+0x5b>
    200b:	69 63 61 6c 20 48 65 	imul   $0x6548206c,0x61(%ebx),%esp
    2012:	6c                   	insb   (%dx),%es:(%edi)
    2013:	6c                   	insb   (%dx),%es:(%edi)
    2014:	6f                   	outsl  %ds:(%esi),(%dx)
    2015:	20 57 6f             	and    %dl,0x6f(%edi)
    2018:	72 6c                	jb     2086 <__GNU_EH_FRAME_HDR+0x66>
    201a:	64 21 00             	and    %eax,%fs:(%eax)

Disassembly of section .eh_frame_hdr:

00002020 <__GNU_EH_FRAME_HDR>:
    2020:	01 1b                	add    %ebx,(%ebx)
    2022:	03 3b                	add    (%ebx),%edi
    2024:	48                   	dec    %eax
    2025:	00 00                	add    %al,(%eax)
    2027:	00 08                	add    %cl,(%eax)
    2029:	00 00                	add    %al,(%eax)
    202b:	00 10                	add    %dl,(%eax)
    202d:	f0 ff                	lock (bad) 
    202f:	ff                   	(bad)  
    2030:	78 00                	js     2032 <__GNU_EH_FRAME_HDR+0x12>
    2032:	00 00                	add    %al,(%eax)
    2034:	40                   	inc    %eax
    2035:	f0 ff                	lock (bad) 
    2037:	ff 9c 00 00 00 50 f0 	lcall  *-0xfb00000(%eax,%eax,1)
    203e:	ff                   	(bad)  
    203f:	ff b0 00 00 00 70    	pushl  0x70000000(%eax)
    2045:	f0 ff                	lock (bad) 
    2047:	ff c4                	inc    %esp
    2049:	00 00                	add    %al,(%eax)
    204b:	00 b0 f0 ff ff 64    	add    %dh,0x64fffff0(%eax)
    2051:	00 00                	add    %al,(%eax)
    2053:	00 f0                	add    %dh,%al
    2055:	f1                   	icebp  
    2056:	ff                   	(bad)  
    2057:	ff                   	(bad)  
    2058:	f8                   	clc    
    2059:	00 00                	add    %al,(%eax)
    205b:	00 60 f2             	add    %ah,-0xe(%eax)
    205e:	ff                   	(bad)  
    205f:	ff 44 01 00          	incl   0x0(%ecx,%eax,1)
    2063:	00 65 f2             	add    %ah,-0xe(%ebp)
    2066:	ff                   	(bad)  
    2067:	ff 58 01             	lcall  *0x1(%eax)
	...

Disassembly of section .eh_frame:

0000206c <__FRAME_END__-0x120>:
    206c:	14 00                	adc    $0x0,%al
    206e:	00 00                	add    %al,(%eax)
    2070:	00 00                	add    %al,(%eax)
    2072:	00 00                	add    %al,(%eax)
    2074:	01 7a 52             	add    %edi,0x52(%edx)
    2077:	00 01                	add    %al,(%ecx)
    2079:	7c 08                	jl     2083 <__GNU_EH_FRAME_HDR+0x63>
    207b:	01 1b                	add    %ebx,(%ebx)
    207d:	0c 04                	or     $0x4,%al
    207f:	04 88                	add    $0x88,%al
    2081:	01 00                	add    %eax,(%eax)
    2083:	00 10                	add    %dl,(%eax)
    2085:	00 00                	add    %al,(%eax)
    2087:	00 1c 00             	add    %bl,(%eax,%eax,1)
    208a:	00 00                	add    %al,(%eax)
    208c:	44                   	inc    %esp
    208d:	f0 ff                	lock (bad) 
    208f:	ff                   	(bad)  
    2090:	3a 00                	cmp    (%eax),%al
    2092:	00 00                	add    %al,(%eax)
    2094:	00 44 07 08          	add    %al,0x8(%edi,%eax,1)
    2098:	20 00                	and    %al,(%eax)
    209a:	00 00                	add    %al,(%eax)
    209c:	30 00                	xor    %al,(%eax)
    209e:	00 00                	add    %al,(%eax)
    20a0:	90                   	nop
    20a1:	ef                   	out    %eax,(%dx)
    20a2:	ff                   	(bad)  
    20a3:	ff 30                	pushl  (%eax)
    20a5:	00 00                	add    %al,(%eax)
    20a7:	00 00                	add    %al,(%eax)
    20a9:	0e                   	push   %cs
    20aa:	08 46 0e             	or     %al,0xe(%esi)
    20ad:	0c 4a                	or     $0x4a,%al
    20af:	0f 0b                	ud2    
    20b1:	74 04                	je     20b7 <__GNU_EH_FRAME_HDR+0x97>
    20b3:	78 00                	js     20b5 <__GNU_EH_FRAME_HDR+0x95>
    20b5:	3f                   	aas    
    20b6:	1a 39                	sbb    (%ecx),%bh
    20b8:	2a 32                	sub    (%edx),%dh
    20ba:	24 22                	and    $0x22,%al
    20bc:	10 00                	adc    %al,(%eax)
    20be:	00 00                	add    %al,(%eax)
    20c0:	54                   	push   %esp
    20c1:	00 00                	add    %al,(%eax)
    20c3:	00 9c ef ff ff 10 00 	add    %bl,0x10ffff(%edi,%ebp,8)
    20ca:	00 00                	add    %al,(%eax)
    20cc:	00 00                	add    %al,(%eax)
    20ce:	00 00                	add    %al,(%eax)
    20d0:	10 00                	adc    %al,(%eax)
    20d2:	00 00                	add    %al,(%eax)
    20d4:	68 00 00 00 98       	push   $0x98000000
    20d9:	ef                   	out    %eax,(%dx)
    20da:	ff                   	(bad)  
    20db:	ff 20                	jmp    *(%eax)
    20dd:	00 00                	add    %al,(%eax)
    20df:	00 00                	add    %al,(%eax)
    20e1:	00 00                	add    %al,(%eax)
    20e3:	00 30                	add    %dh,(%eax)
    20e5:	00 00                	add    %al,(%eax)
    20e7:	00 7c 00 00          	add    %bh,0x0(%eax,%eax,1)
    20eb:	00 a4 ef ff ff 3e 00 	add    %ah,0x3effff(%edi,%ebp,8)
    20f2:	00 00                	add    %al,(%eax)
    20f4:	00 48 0c             	add    %cl,0xc(%eax)
    20f7:	01 00                	add    %eax,(%eax)
    20f9:	47                   	inc    %edi
    20fa:	10 05 02 75 00 43    	adc    %al,0x43007502
    2100:	10 03                	adc    %al,(%ebx)
    2102:	02 75 7c             	add    0x7c(%ebp),%dh
    2105:	4c                   	dec    %esp
    2106:	0f 03 75 78          	lsl    0x78(%ebp),%esi
    210a:	06                   	push   %es
    210b:	5a                   	pop    %edx
    210c:	c1 0c 01 00          	rorl   $0x0,(%ecx,%eax,1)
    2110:	41                   	inc    %ecx
    2111:	c3                   	ret    
    2112:	41                   	inc    %ecx
    2113:	c5 43 0c             	lds    0xc(%ebx),%eax
    2116:	04 04                	add    $0x4,%al
    2118:	48                   	dec    %eax
    2119:	00 00                	add    %al,(%eax)
    211b:	00 b0 00 00 00 f0    	add    %dh,-0x10000000(%eax)
    2121:	f0 ff                	lock (bad) 
    2123:	ff 65 00             	jmp    *0x0(%ebp)
    2126:	00 00                	add    %al,(%eax)
    2128:	00 45 0e             	add    %al,0xe(%ebp)
    212b:	08 85 02 4c 0e 0c    	or     %al,0xc0e4c02(%ebp)
    2131:	87 03                	xchg   %eax,(%ebx)
    2133:	41                   	inc    %ecx
    2134:	0e                   	push   %cs
    2135:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
    213b:	83 05 43 0e 20 6d 0e 	addl   $0xe,0x6d200e43
    2142:	24 41                	and    $0x41,%al
    2144:	0e                   	push   %cs
    2145:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
    2149:	44                   	inc    %esp
    214a:	0e                   	push   %cs
    214b:	30 4d 0e             	xor    %cl,0xe(%ebp)
    214e:	20 47 0e             	and    %al,0xe(%edi)
    2151:	14 41                	adc    $0x41,%al
    2153:	c3                   	ret    
    2154:	0e                   	push   %cs
    2155:	10 41 c6             	adc    %al,-0x3a(%ecx)
    2158:	0e                   	push   %cs
    2159:	0c 41                	or     $0x41,%al
    215b:	c7                   	(bad)  
    215c:	0e                   	push   %cs
    215d:	08 41 c5             	or     %al,-0x3b(%ecx)
    2160:	0e                   	push   %cs
    2161:	04 00                	add    $0x0,%al
    2163:	00 10                	add    %dl,(%eax)
    2165:	00 00                	add    %al,(%eax)
    2167:	00 fc                	add    %bh,%ah
    2169:	00 00                	add    %al,(%eax)
    216b:	00 14 f1             	add    %dl,(%ecx,%esi,8)
    216e:	ff                   	(bad)  
    216f:	ff 05 00 00 00 00    	incl   0x0
    2175:	00 00                	add    %al,(%eax)
    2177:	00 10                	add    %dl,(%eax)
    2179:	00 00                	add    %al,(%eax)
    217b:	00 10                	add    %dl,(%eax)
    217d:	01 00                	add    %eax,(%eax)
    217f:	00 05 f1 ff ff 04    	add    %al,0x4fffff1
    2185:	00 00                	add    %al,(%eax)
    2187:	00 00                	add    %al,(%eax)
    2189:	00 00                	add    %al,(%eax)
	...

0000218c <__FRAME_END__>:
    218c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

00003ed8 <__frame_dummy_init_array_entry>:
    3ed8:	00 12                	add    %dl,(%edx)
	...

Disassembly of section .fini_array:

00003edc <__do_global_dtors_aux_fini_array_entry>:
    3edc:	b0 11                	mov    $0x11,%al
	...

Disassembly of section .dynamic:

00003ee0 <_DYNAMIC>:
    3ee0:	01 00                	add    %eax,(%eax)
    3ee2:	00 00                	add    %al,(%eax)
    3ee4:	01 00                	add    %eax,(%eax)
    3ee6:	00 00                	add    %al,(%eax)
    3ee8:	0c 00                	or     $0x0,%al
    3eea:	00 00                	add    %al,(%eax)
    3eec:	00 10                	add    %dl,(%eax)
    3eee:	00 00                	add    %al,(%eax)
    3ef0:	0d 00 00 00 8c       	or     $0x8c000000,%eax
    3ef5:	12 00                	adc    (%eax),%al
    3ef7:	00 19                	add    %bl,(%ecx)
    3ef9:	00 00                	add    %al,(%eax)
    3efb:	00 d8                	add    %bl,%al
    3efd:	3e 00 00             	add    %al,%ds:(%eax)
    3f00:	1b 00                	sbb    (%eax),%eax
    3f02:	00 00                	add    %al,(%eax)
    3f04:	04 00                	add    $0x0,%al
    3f06:	00 00                	add    %al,(%eax)
    3f08:	1a 00                	sbb    (%eax),%al
    3f0a:	00 00                	add    %al,(%eax)
    3f0c:	dc 3e                	fdivrl (%esi)
    3f0e:	00 00                	add    %al,(%eax)
    3f10:	1c 00                	sbb    $0x0,%al
    3f12:	00 00                	add    %al,(%eax)
    3f14:	04 00                	add    $0x0,%al
    3f16:	00 00                	add    %al,(%eax)
    3f18:	f5                   	cmc    
    3f19:	fe                   	(bad)  
    3f1a:	ff 6f 28             	ljmp   *0x28(%edi)
    3f1d:	02 00                	add    (%eax),%al
    3f1f:	00 05 00 00 00 c8    	add    %al,0xc8000000
    3f25:	02 00                	add    (%eax),%al
    3f27:	00 06                	add    %al,(%esi)
    3f29:	00 00                	add    %al,(%eax)
    3f2b:	00 48 02             	add    %cl,0x2(%eax)
    3f2e:	00 00                	add    %al,(%eax)
    3f30:	0a 00                	or     (%eax),%al
    3f32:	00 00                	add    %al,(%eax)
    3f34:	af                   	scas   %es:(%edi),%eax
    3f35:	00 00                	add    %al,(%eax)
    3f37:	00 0b                	add    %cl,(%ebx)
    3f39:	00 00                	add    %al,(%eax)
    3f3b:	00 10                	add    %dl,(%eax)
    3f3d:	00 00                	add    %al,(%eax)
    3f3f:	00 15 00 00 00 00    	add    %dl,0x0
    3f45:	00 00                	add    %al,(%eax)
    3f47:	00 03                	add    %al,(%ebx)
    3f49:	00 00                	add    %al,(%eax)
    3f4b:	00 d8                	add    %bl,%al
    3f4d:	3f                   	aas    
    3f4e:	00 00                	add    %al,(%eax)
    3f50:	02 00                	add    (%eax),%al
    3f52:	00 00                	add    %al,(%eax)
    3f54:	10 00                	adc    %al,(%eax)
    3f56:	00 00                	add    %al,(%eax)
    3f58:	14 00                	adc    $0x0,%al
    3f5a:	00 00                	add    %al,(%eax)
    3f5c:	11 00                	adc    %eax,(%eax)
    3f5e:	00 00                	add    %al,(%eax)
    3f60:	17                   	pop    %ss
    3f61:	00 00                	add    %al,(%eax)
    3f63:	00 08                	add    %cl,(%eax)
    3f65:	04 00                	add    $0x0,%al
    3f67:	00 11                	add    %dl,(%ecx)
    3f69:	00 00                	add    %al,(%eax)
    3f6b:	00 c8                	add    %cl,%al
    3f6d:	03 00                	add    (%eax),%eax
    3f6f:	00 12                	add    %dl,(%edx)
    3f71:	00 00                	add    %al,(%eax)
    3f73:	00 40 00             	add    %al,0x0(%eax)
    3f76:	00 00                	add    %al,(%eax)
    3f78:	13 00                	adc    (%eax),%eax
    3f7a:	00 00                	add    %al,(%eax)
    3f7c:	08 00                	or     %al,(%eax)
    3f7e:	00 00                	add    %al,(%eax)
    3f80:	1e                   	push   %ds
    3f81:	00 00                	add    %al,(%eax)
    3f83:	00 08                	add    %cl,(%eax)
    3f85:	00 00                	add    %al,(%eax)
    3f87:	00 fb                	add    %bh,%bl
    3f89:	ff                   	(bad)  
    3f8a:	ff 6f 01             	ljmp   *0x1(%edi)
    3f8d:	00 00                	add    %al,(%eax)
    3f8f:	08 fe                	or     %bh,%dh
    3f91:	ff                   	(bad)  
    3f92:	ff 6f 88             	ljmp   *-0x78(%edi)
    3f95:	03 00                	add    (%eax),%eax
    3f97:	00 ff                	add    %bh,%bh
    3f99:	ff                   	(bad)  
    3f9a:	ff 6f 01             	ljmp   *0x1(%edi)
    3f9d:	00 00                	add    %al,(%eax)
    3f9f:	00 f0                	add    %dh,%al
    3fa1:	ff                   	(bad)  
    3fa2:	ff 6f 78             	ljmp   *0x78(%edi)
    3fa5:	03 00                	add    (%eax),%eax
    3fa7:	00 fa                	add    %bh,%dl
    3fa9:	ff                   	(bad)  
    3faa:	ff 6f 04             	ljmp   *0x4(%edi)
	...

Disassembly of section .got:

00003fd8 <_GLOBAL_OFFSET_TABLE_>:
    3fd8:	e0 3e                	loopne 4018 <_end+0xc>
	...
    3fe2:	00 00                	add    %al,(%eax)
    3fe4:	40                   	inc    %eax
    3fe5:	10 00                	adc    %al,(%eax)
    3fe7:	00 50 10             	add    %dl,0x10(%eax)
	...
    3ff6:	00 00                	add    %al,(%eax)
    3ff8:	90                   	nop
    3ff9:	10 00                	adc    %al,(%eax)
    3ffb:	00 00                	add    %al,(%eax)
    3ffd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .data:

00004000 <__data_start>:
    4000:	00 00                	add    %al,(%eax)
	...

00004004 <__dso_handle>:
    4004:	04 40                	add    $0x40,%al
	...

Disassembly of section .bss:

00004008 <completed.7622>:
    4008:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%ecx)
   e:	2e 33 2e             	xor    %cs:(%esi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%esi)
  1e:	30 2e                	xor    %ch,(%esi)
  20:	30 34 29             	xor    %dh,(%ecx,%ebp,1)
  23:	20 39                	and    %bh,(%ecx)
  25:	2e 33 2e             	xor    %cs:(%esi),%ebp
  28:	30 00                	xor    %al,(%eax)
